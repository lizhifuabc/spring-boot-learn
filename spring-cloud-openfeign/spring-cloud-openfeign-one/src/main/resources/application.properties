server.port=8081
# nacos 配置
spring.application.name=one-service
spring.cloud.nacos.username=nacos
spring.cloud.nacos.password=nacos
spring.cloud.nacos.discovery.server-addr=127.0.0.1:8848
spring.profiles.active=dev

# feign 配置日志级别，openfeign client 所在的包路径
logging.level.com.spring.cloud.openfeign.one.feign=debug

# 服务提供者的微服务ID,设置对应的负载均衡类
two-service.ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.RandomRule

# 替换默认httpclient为okhttp
spring.cloud.openfeign.okhttp.enabled=true

# 开启请求数据的压缩功能
spring.cloud.openfeign.compression.request.enabled=true
# 压缩类型
spring.cloud.openfeign.compression.request.mime-types=text/xml,application/xml,application/json
# 最小压缩值标准，当数据大于 2048 才会进行压缩
spring.cloud.openfeign.compression.request.min-request-size=2048
# 开启响应数据压缩功能
spring.cloud.openfeign.compression.response.enabled=true

# 开启熔断
spring.cloud.openfeign.circuitbreaker.enabled=true
# 开启熔断组
spring.cloud.openfeign.circuitbreaker.group.enabled=true
# 开启熔断组的熔断器
spring.cloud.openfeign.circuitbreaker.alphanumeric-ids.enabled=true

# 是否注册HealthIndicator
resilience4j.circuitbreaker.instances.default.registerHealthIndicator =true
#OPEN状态下的等待时长,默认60s
resilience4j.circuitbreaker.instances.default.waitDurationInOpenState = 60s
# 失败率阈值,达到此值会触发OPEN状态,默认50%
resilience4j.circuitbreaker.instances.default.failureRateThreshold= 50
# 慢调用时长阈值,默认600ms
resilience4j.circuitbreaker.instances.default.slowCallDurationThreshold = 600ms
#HALF_OPEN状态下允许的最大调用次数,默认10
resilience4j.circuitbreaker.instances.default.permittedNumberOfCallsInHalfOpenState = 10
#:滑动窗口类型,默认COUNT_BASED
resilience4j.circuitbreaker.instances.default.slidingWindowType=COUNT_BASED
# 出现异常的最少调用次数,在达到阈值判断前被忽略,默认100
resilience4j.circuitbreaker.instances.default.minimumNumberOfCalls = 100

resilience4j.circuitbreaker.instances.TwoFeign_two.minimumNumberOfCalls=69
resilience4j.timelimiter.instances.TwoFeign_two.timeoutDuration=10s

management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.endpoints.web.base-path=/actuator
#显示断路器的健康状态
management.health.circuitbreakers.enabled=true